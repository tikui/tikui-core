name: Node CI

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - 18
        - 20
        - 22
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: node check
        run: |
          npm ci
          npm run build
          npm test
          npm run component-test:ci
        env:
          CI: true
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: node check
        run: |
          npm ci
          npm run build
          npm test
        env:
          CI: true
  deploy:
    if: startsWith(github.event.ref, 'refs/tags/')
    needs: ["build", "build-windows"]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          registry-url: 'https://registry.npmjs.org'
      - name: deploy
        run: |
          PACKAGE_VERSION=$(cat package.json|grep version|head -1|awk -F: '{ print $2 }'|sed 's/[", ]//g')
          echo "Package: $PACKAGE_VERSION"
          echo "Tag: $GITHUB_REF_NAME"
          if [ "$PACKAGE_VERSION" != "$GITHUB_REF_NAME" ]; then echo "$PACKAGE_VERSION and $GITHUB_REF_NAME are not the same, skipping"; exit 1; fi
          echo "Publishing $PACKAGE_VERSION â€¦"
          npm ci
          npm run build
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
